// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser:array-literall 1`] = `
Object {
  "members": Array [
    Object {
      "name": "a",
      "type": "variable",
    },
    Object {
      "name": "b",
      "type": "variable",
    },
    Object {
      "type": "literal",
      "value": 1,
    },
    Object {
      "type": "literal",
      "value": 2,
    },
    Object {
      "members": Array [
        Object {
          "key": Object {
            "name": "a",
            "type": "identifier",
          },
          "value": Object {
            "type": "literal",
            "value": 1,
          },
        },
      ],
      "type": "object",
    },
  ],
  "type": "array",
}
`;

exports[`parser:binary-expression 1`] = `
Object {
  "left": Object {
    "left": Object {
      "name": "a",
      "type": "variable",
    },
    "op": "&&",
    "right": Object {
      "name": "b",
      "type": "variable",
    },
    "type": "and",
  },
  "op": "&&",
  "right": Object {
    "name": "c",
    "type": "variable",
  },
  "type": "and",
}
`;

exports[`parser:binary-expression 2`] = `
Object {
  "left": Object {
    "left": Object {
      "name": "a",
      "type": "variable",
    },
    "op": "&&",
    "right": Object {
      "name": "b",
      "type": "variable",
    },
    "type": "and",
  },
  "op": "||",
  "right": Object {
    "name": "c",
    "type": "variable",
  },
  "type": "or",
}
`;

exports[`parser:binary-expression 3`] = `
Object {
  "left": Object {
    "name": "a",
    "type": "variable",
  },
  "op": "||",
  "right": Object {
    "left": Object {
      "name": "b",
      "type": "variable",
    },
    "op": "&&",
    "right": Object {
      "name": "c",
      "type": "variable",
    },
    "type": "and",
  },
  "type": "or",
}
`;

exports[`parser:binary-expression 4`] = `
Object {
  "left": Object {
    "left": Object {
      "name": "a",
      "type": "variable",
    },
    "op": "!==",
    "right": Object {
      "name": "b",
      "type": "variable",
    },
    "type": "strneq",
  },
  "op": "===",
  "right": Object {
    "name": "c",
    "type": "variable",
  },
  "type": "streq",
}
`;

exports[`parser:complex 1`] = `
Object {
  "body": Array [
    Object {
      "type": "raw",
      "value": "raw content ",
    },
    Object {
      "body": Object {
        "body": Array [
          Object {
            "type": "template_raw",
            "value": "es tempalte ",
          },
          Object {
            "body": Array [
              Object {
                "type": "template_raw",
                "value": "deeper",
              },
              Object {
                "left": Object {
                  "name": "a",
                  "type": "variable",
                },
                "op": "+",
                "right": Object {
                  "type": "literal",
                  "value": 3,
                },
                "type": "add",
              },
            ],
            "type": "template",
          },
        ],
        "type": "template",
      },
      "type": "script",
    },
  ],
  "type": "document",
}
`;

exports[`parser:conditional 1`] = `
Object {
  "alternate": Object {
    "name": "c",
    "type": "variable",
  },
  "consequent": Object {
    "name": "b",
    "type": "variable",
  },
  "test": Object {
    "name": "a",
    "type": "variable",
  },
  "type": "conditional",
}
`;

exports[`parser:evalMode 1`] = `
Object {
  "left": Object {
    "name": "a",
    "type": "variable",
  },
  "op": "+",
  "right": Object {
    "name": "b",
    "type": "variable",
  },
  "type": "add",
}
`;

exports[`parser:filter 1`] = `
Object {
  "body": Array [
    Object {
      "type": "raw",
      "value": "$abc is ",
    },
    Object {
      "body": Object {
        "filters": Array [
          Object {
            "args": Array [],
            "name": "html",
          },
        ],
        "input": Object {
          "name": "abc",
          "type": "variable",
        },
        "type": "filter",
      },
      "type": "script",
    },
  ],
  "type": "document",
}
`;

exports[`parser:filter-escape 1`] = `
Object {
  "body": Array [
    Object {
      "type": "raw",
      "value": "$abc is ",
    },
    Object {
      "body": Object {
        "filters": Array [
          Object {
            "args": Array [
              "YYYY-MM-DD HH:mm:ss",
            ],
            "name": "date",
          },
        ],
        "input": Object {
          "name": "abc",
          "type": "variable",
        },
        "type": "filter",
      },
      "type": "script",
    },
  ],
  "type": "document",
}
`;

exports[`parser:functionCall 1`] = `
Object {
  "args": Array [
    Object {
      "name": "a",
      "type": "variable",
    },
    Object {
      "args": Array [
        Object {
          "name": "b",
          "type": "variable",
        },
      ],
      "identifier": "doAction",
      "type": "func_call",
    },
  ],
  "identifier": "doAction",
  "type": "func_call",
}
`;

exports[`parser:group-expression 1`] = `
Object {
  "left": Object {
    "name": "a",
    "type": "variable",
  },
  "op": "&&",
  "right": Object {
    "left": Object {
      "name": "b",
      "type": "variable",
    },
    "op": "&&",
    "right": Object {
      "name": "c",
      "type": "variable",
    },
    "type": "and",
  },
  "type": "and",
}
`;

exports[`parser:multi-expression 1`] = `
Object {
  "body": Array [
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "name": "b",
        "type": "identifier",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "name": "b",
        "type": "variable",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "type": "string",
        "value": "c",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "body": Array [
          Object {
            "type": "template_raw",
            "value": "d",
          },
        ],
        "type": "template",
      },
      "type": "get",
    },
  ],
  "type": "expression-list",
}
`;

exports[`parser:number 1`] = `
Object {
  "left": Object {
    "left": Object {
      "type": "literal",
      "value": -1,
    },
    "op": "+",
    "right": Object {
      "type": "literal",
      "value": 2.5,
    },
    "type": "add",
  },
  "op": "+",
  "right": Object {
    "type": "literal",
    "value": 3,
  },
  "type": "add",
}
`;

exports[`parser:object-literall 1`] = `
Object {
  "members": Array [
    Object {
      "key": Object {
        "name": "a",
        "type": "identifier",
      },
      "value": Object {
        "type": "literal",
        "value": 1,
      },
    },
    Object {
      "key": Object {
        "type": "string",
        "value": "b",
      },
      "value": Object {
        "type": "literal",
        "value": 2,
      },
    },
    Object {
      "key": Object {
        "body": Array [
          Object {
            "type": "template_raw",
            "value": "c",
          },
        ],
        "type": "template",
      },
      "value": Object {
        "type": "literal",
        "value": 3,
      },
    },
    Object {
      "key": Object {
        "name": "d",
        "type": "identifier",
      },
      "value": Object {
        "members": Array [],
        "type": "object",
      },
    },
  ],
  "type": "object",
}
`;

exports[`parser:simple 1`] = `
Object {
  "body": Array [
    Object {
      "type": "raw",
      "value": "expression result is ",
    },
    Object {
      "body": Object {
        "left": Object {
          "name": "a",
          "type": "variable",
        },
        "op": "+",
        "right": Object {
          "name": "b",
          "type": "variable",
        },
        "type": "add",
      },
      "type": "script",
    },
  ],
  "type": "document",
}
`;

exports[`parser:single-string 1`] = `
Object {
  "type": "literal",
  "value": "string",
}
`;

exports[`parser:string 1`] = `
Object {
  "type": "literal",
  "value": "string literall, escape \\"",
}
`;

exports[`parser:template 1`] = `
Object {
  "body": Array [
    Object {
      "type": "template_raw",
      "value": "abc",
    },
    Object {
      "left": Object {
        "name": "a",
        "type": "variable",
      },
      "op": "+",
      "right": Object {
        "name": "b",
        "type": "variable",
      },
      "type": "add",
    },
  ],
  "type": "template",
}
`;

exports[`parser:unary-expression 1`] = `
Object {
  "op": "!",
  "type": "unary",
  "value": Object {
    "op": "!",
    "type": "unary",
    "value": Object {
      "name": "a",
      "type": "variable",
    },
  },
}
`;

exports[`parser:variable-geter 1`] = `
Object {
  "args": Array [
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "name": "b",
        "type": "identifier",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "name": "b",
        "type": "variable",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "type": "string",
        "value": "c",
      },
      "type": "get",
    },
    Object {
      "host": Object {
        "name": "a",
        "type": "variable",
      },
      "key": Object {
        "body": Array [
          Object {
            "type": "template_raw",
            "value": "d",
          },
        ],
        "type": "template",
      },
      "type": "get",
    },
  ],
  "identifier": "doAction",
  "type": "func_call",
}
`;

exports[`parser:variable-geter2 1`] = `
Object {
  "host": Object {
    "host": Object {
      "host": Object {
        "host": Object {
          "name": "a",
          "type": "variable",
        },
        "key": Object {
          "name": "b",
          "type": "variable",
        },
        "type": "get",
      },
      "key": Object {
        "type": "string",
        "value": "c",
      },
      "type": "get",
    },
    "key": Object {
      "name": "d",
      "type": "variable",
    },
    "type": "get",
  },
  "key": Object {
    "body": Array [
      Object {
        "type": "template_raw",
        "value": "x",
      },
    ],
    "type": "template",
  },
  "type": "get",
}
`;

exports[`parser:variable-geter2 2`] = `
Object {
  "host": Object {
    "host": Object {
      "host": Object {
        "host": Object {
          "name": "a",
          "type": "variable",
        },
        "key": Object {
          "name": "b",
          "type": "variable",
        },
        "type": "get",
      },
      "key": Object {
        "type": "string",
        "value": "c",
      },
      "type": "get",
    },
    "key": Object {
      "name": "d",
      "type": "identifier",
    },
    "type": "get",
  },
  "key": Object {
    "body": Array [
      Object {
        "type": "template_raw",
        "value": "x",
      },
    ],
    "type": "template",
  },
  "type": "get",
}
`;
